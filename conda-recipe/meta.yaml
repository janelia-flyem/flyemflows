{% set data = load_setup_py_data() %}

package:
  name: flyemflows 
  version: {{ data['version'] }}

source:
  path: ../

build:
  noarch: python
  script: python setup.py install --single-version-externally-managed --record=record.txt
  entry_points:
    - launchflow = flyemflows.bin.launchflow:main
    

requirements:
  build:
    - python {{ python }}
    - setuptools
  run:
    - python {{ python }}
    - requests
    - psutil
    - numpy
    - pandas
    - numba
    - scipy
    - scikit-image
    - fabric
    - pyarrow

    # FlyEM mesh library
    - vol2mesh >=0.1.post5

    # neuprint
    - neuprint-python

    # Simple python-only RAG data structure.
    - ilastikrag

    - dask
    - dask-jobqueue
    - distributed

    # Misc. serialization tools

    # Note:
    #  Previously, the lz4 packages were named 'lz4' (c library) and 'python-lz4' (python bindings)
    #  but now they are named 'lz4-c' (c library) and 'lz4' (python bindings)
    - lz4 {{ lz4 }}

    - cloudpickle
    - tblib

    - confiddler

    # DVID support
    - libdvid-cpp >=0.2
    - neuclease >=0.2.post107
    - dvidutils >=0.0.post44
    - dvid-resource-manager

    # misc. image formats
    - pillow
    - vigra
    - h5py
    - zarr >=2.2
    - intern # APL Boss service

    # Optional dependency.
    # The N5VolumeService uses z5py,
    # but the ZarrVolumeservice is capable of reading/writing N5 volumes, too.
    #- z5py

    
    # Needed for brainmaps support:
    - httplib2
    - oauth2client
    - snappy
    - python-snappy

    # Not included:
    # - tensorstore # install with pip!
    
    # At the time of this writing, gsutil does not support Python 3 [1],
    # so it can't be directly installed into the same environment as flyemflows.
    # But this package implements a workaround: It creates an auxilliary
    # conda environment with gsutil (and Python 2), and then adds it to your
    # PATH so gsutil is available from the command line (or subprocess.call)
    # [1]: https://github.com/GoogleCloudPlatform/gsutil/issues/29#issuecomment-464244072
    #- gsutil-env
##
## For now, we don't run the tests during the recipe build.
##
#test:
#  requires:
#    - pytest
#    - numpy-allocation-tracking
#    - dvid
#    - scipy
#
#  imports:
#    - flyemflows

about:
  home: http://github.com/janelia-flyem/flyemflows
  license: BSD (3-clause)
  license_file: LICENSE.txt
  summary: Various compute-cluster workflows for the FlyEM project.
